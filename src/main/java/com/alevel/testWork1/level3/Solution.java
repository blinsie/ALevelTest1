package com.alevel.testWork1.level3;

/**
 * При наличии доски с m на n ячеек каждая ячейка имеет начальное состояние
 * live (1) или dead (0). Каждая ячейка взаимодействует со своими восемью
 * соседями (по горизонтали, вертикали и диагонали), используя следующие четыре
 * правила (взятые из вышеупомянутой статьи в Википедии): Любая живая ячейка
 * с менее чем двумя живыми соседями умирает, как если бы она была вызвана
 * недостаточным населением. Любая живая клетка с двумя или тремя живыми
 * соседями доживает до следующего поколения. Любая живая клетка с более чем
 * тремя живыми соседями умирает, как если бы она была перенаселена. Любая
 * мертвая клетка с ровно тремя живыми соседями становится живой клеткой, как
 * если бы она воспроизводилась. Напишите функцию для вычисления следующего
 * состояния (после одного обновления) платы с учетом ее текущего состояния.
 * Следующее состояние создается путем применения вышеуказанных правил
 * одновременно к каждой ячейке в текущем состоянии, где рождения и смерти
 * происходят одновременно.
 */

public class Solution {

    public int[][] nextStepOfLife(int[][] field) {

        if (field.length == 0 || field == null)
            return null;

        int[][] result = new int[field.length][field[0].length];
        int currentStatistic;
        int statCounter = 0;

        for (int i = 0; i < field.length; i++) {
            while (statCounter < 8) {                           // i+1, j+1
                //if ()                                         // i+1, j
                                                                // i, j+1 ...
            }
        }
    }

}
